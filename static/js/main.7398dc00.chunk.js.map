{"version":3,"sources":["Images/favicon.ico","Components/Homepage.jsx","Components/Common.jsx","api/index.js","Actions/chatAction.js","Components/Message.jsx","Components/AddImageModal.jsx","Components/ChatRoom.jsx","Actions/authAction.js","Components/Signup.jsx","Components/Login.jsx","Components/Searcher.jsx","App.js","reportWebVitals.js","Reducers/authReducer.js","Reducers/chatReducer.js","Reducers/rootReducer.js","index.js"],"names":["useStyles","makeStyles","appBar","display","padding","flexDirection","justifyContent","alignItems","backgroundColor","heading","color","fontWeight","paper","borderRadius","background","buttonSignup","marginTop","marginBottom","buttonLogin","image","marginLeft","Homepage","classes","history","useHistory","JSON","parse","localStorage","getItem","push","Container","maxWidth","style","height","AppBar","className","position","src","Img","alt","marginRight","Typography","variant","align","Paper","textDecoration","to","Button","size","type","appBar2","top","list","width","fullList","Common","anchor","chats","dispatch","useDispatch","currentUser","logout","window","confirm","useState","opened","setOpened","toggleDrawer","open","event","key","Fragment","IconButton","onClick","Drawer","onClose","clsx","role","onKeyDown","List","length","map","chat","index","unseenNumber","messages","filter","message","name","username","seen","Divider","_id","ListItem","button","ListItemIcon","AccountCircle","ListItemText","primary","participants","Chip","label","bottom","ExitToApp","component","Link","SearchOutlined","API","axios","create","baseURL","findUser","user","post","addUser","newUser","findChat","userChats","get","newMessage","id","patch","deleteMessage","messageId","deleteForMe","messageSeen","userChatsAction","a","api","data","payload","console","log","newMessageAction","deleteMessageAction","messageSeenAction","Message","currentUsername","chatId","socket","reciever","newDay","date","slice","jc","bg","anchorEl","setAnchorEl","sender","handleClose","Boolean","undefined","margin","fontSize","aria-controls","aria-haspopup","currentTarget","MoreVert","Menu","keepMounted","MenuItem","deleteForMeAction","emit","media","maxHeight","wordWrap","letterSpacing","time","theme","modal","border","boxShadow","shadows","spacing","AddImageModal","setMedia","modalOpen","setOpen","img","setImg","cropped","setCropped","cropperRef","useRef","handleModalClose","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","initialAspectRatio","guides","crop","imageElement","current","cropper","getCroppedCanvas","toDataURL","ref","multiple","onDone","base64","disabled","fullWidth","palette","currentChat","ChatRoom","useParams","useSelector","state","find","setMessage","useEffect","io","newChat","joinedUser","on","sendMessage","moment","Date","messageObj","toLocaleDateString","toLocaleTimeString","hour","minute","parent","forceScroll","paddingTop","float","paddingBottom","InputBase","autoComplete","placeholder","value","onKeyPress","code","onChange","e","target","Popover","anchorOrigin","vertical","horizontal","transformOrigin","showPreview","showSkinTones","onSelect","emote","prev","native","userSignin","userSignup","root","form","flexWrap","textField","fileInput","buttonSubmit","fontFamily","Signup","password","confPass","setNewUser","clicked","setClicked","visible","setVisible","updateData","prevData","newUserSignup","preventDefault","alert","Grow","noValidate","TextField","InputProps","endAdornment","InputAdornment","preVisible","LinearProgress","buttonGoogle","Login","setUser","userLogin","icons","pointerEvents","inputRoot","Searcher","query","setQuery","users","auth","toLowerCase","includes","inputProps","textTransform","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","authData","action","setItem","stringify","clear","chatReducer","findIndex","splice","combineReducers","store","createStore","rootReducer","compose","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7398dc00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon.8d2933b8.ico\";","import {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  AppBar,\r\n} from \"@material-ui/core\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Img from \"../Images/favicon.ico\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appBar: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  heading: {\r\n    color: \"#C2936E\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  paper: {\r\n    borderRadius: 15,\r\n    padding: \"100px 0\",\r\n    background: \"black\",\r\n  },\r\n  buttonSignup: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 20,\r\n    marginBottom: 60,\r\n    background: \"#79CDCD\",\r\n  },\r\n  buttonLogin: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n    background: \"#66cd00\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n  },\r\n}));\r\n\r\nconst Homepage = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  if (user) history.push(\"/chats\");\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ height: 30 }}>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"inherit\">\r\n          <img src={Img} alt=\"logo\" style={{ height: 40, marginRight: 20 }} />\r\n          <Typography className={classes.heading} variant=\"h4\" align=\"center\">\r\n            MemB Chat\r\n          </Typography>\r\n        </AppBar>\r\n      </Container>\r\n      <Container maxWidth=\"sm\" align=\"center\" style={{ marginTop: 50 }}>\r\n        <Paper className={classes.paper}>\r\n          <Typography\r\n            style={{ fontWeight: \"bold\", color: \"#C2936E\" }}\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n          >\r\n            New User ?\r\n          </Typography>\r\n          <NavLink style={{ textDecoration: \"none\" }} to=\"/register\">\r\n            <Button\r\n              className={classes.buttonSignup}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </NavLink>\r\n          <Typography\r\n            style={{ fontWeight: \"bold\", marginBottom: 60, color: \"#C2936E\" }}\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n          >\r\n            OR\r\n          </Typography>\r\n          <Typography\r\n            style={{ fontWeight: \"bold\", color: \"#C2936E\" }}\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n          >\r\n            Existing User ?\r\n          </Typography>\r\n          <NavLink style={{ textDecoration: \"none\" }} to=\"/login\">\r\n            <Button\r\n              className={classes.buttonLogin}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n            >\r\n              Log In\r\n            </Button>\r\n          </NavLink>\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Chip, Container, Drawer, IconButton } from \"@material-ui/core\";\r\nimport { ExitToApp, SearchOutlined } from \"@material-ui/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport { useState } from \"react\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  appBar: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  heading: {\r\n    color: \"#C2936E\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  appBar2: {\r\n    top: 50,\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  list: {\r\n    width: 300,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Common({ chats }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const currentUser = JSON.parse(localStorage.getItem(\"profile\"));\r\n\r\n  const logout = () => {\r\n    if (window.confirm(\"Are you sure you wish to Logout\")) {\r\n      dispatch({ type: \"LOGOUT\" });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [opened, setOpened] = useState(false);\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setOpened(open);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      key=\"list-div\"\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List key=\"chat-list\" style={{ marginTop: 60, marginBottom: 60 }}>\r\n        {chats.length > 0 ? (\r\n          chats.map((chat, index) => {\r\n            const unseen = chat?.messages.filter(\r\n              (message) =>\r\n                message.name !== currentUser.username && !message.seen\r\n            );\r\n            const unseenNumber = unseen.length;\r\n            return (\r\n              <>\r\n                <Divider key={`divider${chat._id}`} />\r\n                <ListItem\r\n                  button\r\n                  key={chat._id}\r\n                  onClick={() => {\r\n                    history.push(`/chats/${chat._id}`);\r\n                  }}\r\n                >\r\n                  <ListItemIcon>\r\n                    <AccountCircle />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      chat.participants[0] === currentUser.username\r\n                        ? chat.participants[1]\r\n                        : chat.participants[0]\r\n                    }\r\n                  />\r\n                  {unseenNumber > 0 ? <Chip label={unseenNumber} /> : <></>}\r\n                </ListItem>\r\n              </>\r\n            );\r\n          })\r\n        ) : (\r\n          <ListItem key=\"noChats\">\r\n            <ListItemText primary=\"No chats\" />\r\n          </ListItem>\r\n        )}\r\n        <Divider key=\"last\" />\r\n      </List>\r\n\r\n      <List\r\n        key=\"topTextContainer\"\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          width: 300,\r\n          background: \"black\",\r\n        }}\r\n      >\r\n        <ListItem key=\"top\">\r\n          <ListItemIcon>\r\n            <AccountCircle style={{ color: \"white\" }} />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            style={{ color: \"#ffffff\" }}\r\n            primary={currentUser.username}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <List\r\n        key=\"bottomTextContainer\"\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: 0,\r\n          width: 300,\r\n          background: \"black\",\r\n        }}\r\n      >\r\n        <ListItem key=\"btn-logout\" button onClick={logout}>\r\n          <ListItemText style={{ color: \"#ffffff\" }} primary=\"Logout\" />\r\n          <ListItemIcon style={{ color: \"#ffffff\" }}>\r\n            <ExitToApp />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ height: 30 }}>\r\n        <AppBar position=\"fixed\" className={classes.appBar2}>\r\n          <React.Fragment key=\"left\">\r\n            <IconButton onClick={toggleDrawer(\"left\", true)}>\r\n              <ListIcon style={{ color: \"#ffffff\" }} />\r\n            </IconButton>\r\n            <Drawer\r\n              anchor=\"left\"\r\n              open={opened}\r\n              onClose={toggleDrawer(\"left\", false)}\r\n            >\r\n              {list(\"left\")}\r\n            </Drawer>\r\n          </React.Fragment>\r\n          <IconButton component={Link} to=\"/search\">\r\n            <SearchOutlined style={{ color: \"FFFFFF\" }} />\r\n          </IconButton>\r\n        </AppBar>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://memb-chat-server.herokuapp.com\",\r\n});\r\n\r\nexport const findUser = (user) => API.post(\"/auth/signin\", user);\r\nexport const addUser = (newUser) => API.post(\"/auth/signup\", newUser);\r\nexport const fetchUsers = () => API.get(\"/auth\");\r\n\r\nexport const findChat = (participants) =>\r\n  API.post(\"/chat/findChat\", participants);\r\nexport const userChats = (username) => API.get(`/chat/${username}/userChats`);\r\nexport const newMessage = (id, message) =>\r\n  API.patch(`/chat/${id}/newMessage`, message);\r\nexport const deleteMessage = (id, messageId) =>\r\n  API.patch(`/chat/${id}/deleteMessage`, { messageId: messageId });\r\nexport const deleteForMe = (id, messageId) =>\r\n  API.patch(`/chat/${id}/deleteForMe`, { messageId: messageId });\r\nexport const messageSeen = (id, user) =>\r\n  API.patch(`/chat/${id}/messageSeen`, { user });\r\n","import * as api from \"../api/index\";\r\n\r\nexport const findChatAction = (participants) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.findChat(participants);\r\n    dispatch({ type: \"FIND_CHAT\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const userChatsAction = (username) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.userChats(username);\r\n    dispatch({ type: \"USER_CHATS\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const newMessageAction = (id, message) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.newMessage(id, message);\r\n    dispatch({ type: \"MESSAGE\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const deleteMessageAction = (id, messageId) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteMessage(id, messageId);\r\n    dispatch({ type: \"MESSAGE\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const deleteForMeAction = (id, messageId) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.deleteForMe(id, messageId);\r\n    dispatch({ type: \"MESSAGE\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const messageSeenAction = (id,user) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.messageSeen(id,user);\r\n    dispatch({ type: \"MESSAGE\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import { Chip, Divider, IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteForMeAction, deleteMessageAction } from \"../Actions/chatAction\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\n\r\nexport default function Message({\r\n  message,\r\n  index,\r\n  currentUsername,\r\n  chatId,\r\n  socket,\r\n  reciever,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const day = message.date?.slice(0, 2);\r\n  const newDay = day === message.date?.slice(0, 2) ? false : true;\r\n  const jc = message.name === currentUsername ? \"flex-end\" : \"flex-start\";\r\n  const bg = message.name === currentUsername ? \"#C2936E\" : \"#F3F3F3\";\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const sender = currentUsername;\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-menu\" : undefined;\r\n\r\n  return (\r\n    <>\r\n      {message?.deleteForMe ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <div\r\n            key={index}\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            {newDay ? (\r\n              <Chip\r\n                style={{\r\n                  marginTop: 20,\r\n                  marginBottom: 20,\r\n                  fontWeight: \"bold\",\r\n                }}\r\n                label={message.date}\r\n              ></Chip>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div\r\n            key={message._id}\r\n            style={{ display: \"flex\", justifyContent: jc }}\r\n          >\r\n            <div\r\n              style={{\r\n                background: bg,\r\n                margin: 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"1px 20px\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                maxWidth: \"50%\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    fontSize: \".7em\",\r\n                    color: \"black\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {message.name}\r\n                </p>\r\n                {message.name === currentUsername ? (\r\n                  <>\r\n                    <IconButton\r\n                      aria-controls=\"simple-menu\"\r\n                      aria-haspopup=\"true\"\r\n                      style={{ color: \"black\", marginRight: -15 }}\r\n                      size=\"small\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      <MoreVert fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id={id}\r\n                      anchorEl={anchorEl}\r\n                      keepMounted\r\n                      open={Boolean(anchorEl)}\r\n                      onClose={handleClose}\r\n                    >\r\n                      <MenuItem\r\n                        style={{\r\n                          background: \"grey\",\r\n                          color: \"black\",\r\n                          marginTop: -8,\r\n                        }}\r\n                        onClick={() => {\r\n                          dispatch(deleteForMeAction(chatId, message._id));\r\n                          handleClose();\r\n                        }}\r\n                      >\r\n                        Delete for me\r\n                      </MenuItem>\r\n                      <Divider style={{ background: \"black\" }} />\r\n                      <MenuItem\r\n                        style={{\r\n                          background: \"grey\",\r\n                          color: \"black\",\r\n                          marginBottom: -8,\r\n                        }}\r\n                        onClick={async () => {\r\n                          await dispatch(\r\n                            deleteMessageAction(chatId, message._id)\r\n                          );\r\n                          handleClose();\r\n                          socket.emit(\"newMessage\", { sender, reciever });\r\n                        }}\r\n                      >\r\n                        Delete for everyone\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              {message.media && message.media !== \"\" ? (\r\n                <img\r\n                  style={{ maxHeight: \"30vh\", maxWidth: \"70vw\" }}\r\n                  src={message.media}\r\n                  alt=\"Broken\"\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <p\r\n                style={{\r\n                  // width: \"100%\",\r\n                  color: \"black\",\r\n                  fontSize: \"1em\",\r\n                  fontWeight: \"bold\",\r\n                  wordWrap: \"break-word\",\r\n                }}\r\n              >\r\n                {message.message}\r\n              </p>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    color: \"black\",\r\n                    letterSpacing: 0,\r\n                    fontSize: \".6em\",\r\n                    fontWeight: \"bold\",\r\n                    wordWrap: \"break-word\",\r\n                  }}\r\n                >\r\n                  {message.time}\r\n                </p>\r\n                {message.name === currentUsername ? (\r\n                  message.seen ? (\r\n                    <DoneAllIcon\r\n                      fontSize=\"small\"\r\n                      style={{ marginLeft: 5, marginTop: 5, color: \"#008080\" }}\r\n                    />\r\n                  ) : (\r\n                    <DoneAllIcon\r\n                      fontSize=\"small\"\r\n                      style={{ marginLeft: 5, marginTop: 5, color: \"grey\" }}\r\n                    />\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import FileBase from \"react-file-base64\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport { useRef, useState } from \"react\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Fade,\r\n  IconButton,\r\n  makeStyles,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"grey\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    margin: 20,\r\n  },\r\n}));\r\n\r\nexport default function AddImageModal({ setMedia }) {\r\n  const classes = useStyles();\r\n  const [modalOpen, setOpen] = useState(false);\r\n  const [img, setImg] = useState(\r\n    \"https://img.icons8.com/pastel-glyph/64/000000/image-file-add.png\"\r\n  );\r\n  const [cropped, setCropped] = useState(\"\");\r\n  const cropperRef = useRef(img);\r\n  const handleModalOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setImg(\"https://img.icons8.com/pastel-glyph/64/000000/image-file-add.png\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const sendMedia = () => {\r\n    setMedia(cropped);\r\n    handleModalClose();\r\n  };\r\n\r\n  const onCrop = () => {\r\n    const imageElement: any = cropperRef?.current;\r\n    const cropper: any = imageElement?.cropper;\r\n    setCropped(cropper.getCroppedCanvas().toDataURL());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleModalOpen} style={{ marginTop: 15 }}>\r\n        <AddPhotoAlternateIcon style={{ color: \"#ffffff\" }} />\r\n      </IconButton>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={modalOpen}\r\n        onClose={handleModalClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={modalOpen}>\r\n          <div className={classes.paper}>\r\n            <div\r\n              style={{\r\n                marginBottom: 20,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {img !==\r\n              \"https://img.icons8.com/pastel-glyph/64/000000/image-file-add.png\" ? (\r\n                <Cropper\r\n                  src={img}\r\n                  style={{ maxHeight: \"50vh\", maxWidth: \"50vw\" }}\r\n                  initialAspectRatio={1 / 1}\r\n                  guides={true}\r\n                  crop={onCrop}\r\n                  ref={cropperRef}\r\n                />\r\n              ) : (\r\n                <img\r\n                  style={{ maxHeight: \"30vh\", maxWidth: \"50vw\" }}\r\n                  src={img}\r\n                  alt=\"Oops!\"\r\n                />\r\n              )}\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) => {\r\n                setImg(base64);\r\n              }}\r\n            />\r\n            <Button\r\n              disabled={\r\n                img ===\r\n                \"https://img.icons8.com/pastel-glyph/64/000000/image-file-add.png\"\r\n                  ? true\r\n                  : false\r\n              }\r\n              style={{\r\n                marginTop: 20,\r\n                background: \"#0063B2\",\r\n                fontWeight: \"bold\",\r\n                color: \"#ffffff\",\r\n              }}\r\n              fullWidth\r\n              onClick={sendMedia}\r\n              variant=\"contained\"\r\n            >\r\n              done\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                marginTop: 20,\r\n                background: \"#b22222\",\r\n                fontWeight: \"bold\",\r\n                color: \"#ffffff\",\r\n              }}\r\n              fullWidth\r\n              onClick={handleModalClose}\r\n              variant=\"contained\"\r\n            >\r\n              cancel\r\n            </Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Common from \"./Common\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport {\r\n  AppBar,\r\n  Container,\r\n  IconButton,\r\n  InputBase,\r\n  Paper,\r\n  Popover,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport Message from \"./Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  messageSeenAction,\r\n  newMessageAction,\r\n  userChatsAction,\r\n} from \"../Actions/chatAction\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport AddImageModal from \"./AddImageModal\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  appBar: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  heading: {\r\n    color: \"#C2936E\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ENDPOINT = \"https://memb-chat-server.herokuapp.com\";\r\nlet chats = [];\r\nlet currentChat = {};\r\nlet socket;\r\n\r\nexport default function ChatRoom() {\r\n  const classes = useStyles();\r\n  const chatId = useParams().id;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  chats = useSelector((state) => state.chats);\r\n  currentChat = chats.find((chat) => chat._id === chatId);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [media, setMedia] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const currentUser = JSON.parse(localStorage.getItem(\"profile\"));\r\n  if (!currentUser) history.push(\"/\");\r\n\r\n  const reciever =\r\n    currentUser.username === currentChat?.participants[0]\r\n      ? currentChat?.participants[1]\r\n      : currentChat?.participants[0];\r\n\r\n  const sender = currentUser.username;\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      dispatch(userChatsAction(currentUser.username));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    const newChat = async () => {\r\n      if (currentUser) {\r\n        await dispatch(messageSeenAction(chatId, currentUser.username));\r\n      }\r\n      socket.emit(\"seen\", reciever);\r\n    };\r\n    newChat();\r\n  }, [chatId]);\r\n\r\n  useEffect(() => {\r\n    const joinedUser = currentUser.username;\r\n    socket.on(\"newMessage\", async ({ sender, reciever }) => {\r\n      if (currentUser && reciever === joinedUser) {\r\n        if (\r\n          sender === currentChat?.participants[0] ||\r\n          sender === currentChat?.participants[1]\r\n        ) {\r\n          console.log(currentChat?.participants[0]);\r\n          console.log(currentChat?.participants[1]);\r\n          console.log(sender);\r\n          await dispatch(\r\n            messageSeenAction(currentChat._id, currentUser.username)\r\n          );\r\n          socket.emit(\"seen\", sender);\r\n        }\r\n        await dispatch(userChatsAction(joinedUser));\r\n      }\r\n    });\r\n    socket.on(\"seen\", (sender) => {\r\n      if (sender === currentUser.username)\r\n        dispatch(userChatsAction(currentUser.username));\r\n    });\r\n  }, []);\r\n\r\n  const updateMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message === \"\" && media === \"\") return;\r\n    const moment = new Date();\r\n    let messageObj = {\r\n      name: currentUser.username,\r\n      message: message,\r\n      media: media,\r\n      date: moment.toLocaleDateString(\"en-GB\"),\r\n      time: moment.toLocaleTimeString([], {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n    };\r\n    await dispatch(newMessageAction(chatId, messageObj));\r\n    setMessage(\"\");\r\n    setMedia(\"\");\r\n    socket.emit(\"newMessage\", { sender, reciever });\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ height: 30 }}>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"inherit\">\r\n          <Typography className={classes.heading} variant=\"h4\" align=\"center\">\r\n            {currentChat\r\n              ? currentChat.participants[0] === currentUser.username\r\n                ? currentChat.participants[1]\r\n                : currentChat.participants[0]\r\n              : \"Chat Room\"}\r\n          </Typography>\r\n        </AppBar>\r\n      </Container>\r\n      <Common parent=\"chatroom\" chats={chats} />\r\n      <Container\r\n        maxWidth=\"sm\"\r\n        style={{\r\n          marginTop: 55,\r\n          marginBottom: 75,\r\n          height: \"70vh\",\r\n        }}\r\n      >\r\n        {chatId ? (\r\n          <>\r\n            <ScrollableFeed forceScroll=\"true\">\r\n              {currentChat?.messages.map((message, index) => (\r\n                <Message\r\n                  key={message._id}\r\n                  message={message}\r\n                  index={index}\r\n                  currentUsername={currentUser.username}\r\n                  chatId={currentChat._id}\r\n                  socket={socket}\r\n                  reciever={\r\n                    currentChat.participants[0] === currentUser.username\r\n                      ? currentChat.participants[1]\r\n                      : currentChat.participants[0]\r\n                  }\r\n                />\r\n              ))}\r\n            </ScrollableFeed>\r\n          </>\r\n        ) : (\r\n          <Typography variant=\"h4\">Click on a chat to start talking</Typography>\r\n        )}\r\n        {media !== \"\" ? (\r\n          <AppBar\r\n            position=\"fixed\"\r\n            style={{\r\n              top: \"auto\",\r\n              bottom: 70,\r\n              background: \"black\",\r\n              paddingTop: 10,\r\n              height: \"30vh\",\r\n            }}\r\n          >\r\n            <Container\r\n              maxWidth=\"sm\"\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <div>\r\n                <IconButton\r\n                  style={{ float: \"right\", marginBottom: -20 }}\r\n                  onClick={() => {\r\n                    setMedia(\"\");\r\n                  }}\r\n                  size=\"small\"\r\n                >\r\n                  <CancelIcon style={{ color: \"#ffffff\" }} />\r\n                </IconButton>\r\n                <img\r\n                  style={{ maxHeight: \"30vh\", maxWidth: \"90vw\" }}\r\n                  src={media}\r\n                  alt=\"try again\"\r\n                />\r\n              </div>\r\n            </Container>\r\n          </AppBar>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Container>\r\n      {chatId ? (\r\n        <AppBar\r\n          style={{\r\n            top: \"auto\",\r\n            bottom: 0,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            height: 70,\r\n            background: \"black\",\r\n          }}\r\n        >\r\n          <Container\r\n            maxWidth=\"sm\"\r\n            style={{ height: 30, display: \"flex\", flexDirection: \"row\" }}\r\n          >\r\n            <IconButton style={{ marginTop: 15 }} onClick={handleClick}>\r\n              <EmojiEmotionsIcon style={{ color: \"#ffffff\" }} />\r\n            </IconButton>\r\n            <Container>\r\n              <Paper\r\n                style={{\r\n                  background: \"#ffffff\",\r\n                  padding: 10,\r\n                  borderRadius: 20,\r\n                }}\r\n              >\r\n                <InputBase\r\n                  name=\"message\"\r\n                  variant=\"outlined\"\r\n                  autoComplete=\"off\"\r\n                  fullWidth\r\n                  placeholder=\"Type a message\"\r\n                  value={message}\r\n                  onKeyPress={(event) => {\r\n                    if (event.code === \"Enter\" || event.code === \"NumpadEnter\")\r\n                      sendMessage();\r\n                  }}\r\n                  onChange={updateMessage}\r\n                ></InputBase>\r\n              </Paper>\r\n            </Container>\r\n            <AddImageModal setMedia={setMedia} />\r\n            <IconButton onClick={sendMessage} style={{ marginTop: 15 }}>\r\n              <SendIcon style={{ color: \"#ffffff\" }} />\r\n            </IconButton>\r\n            <Popover\r\n              id={id}\r\n              open={open}\r\n              anchorEl={anchorEl}\r\n              onClose={handleClose}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n              }}\r\n            >\r\n              <Picker\r\n                showPreview={false}\r\n                showSkinTones={false}\r\n                onSelect={(emote) => {\r\n                  setMessage((prev) => prev + emote.native);\r\n                }}\r\n              />\r\n            </Popover>\r\n          </Container>\r\n        </AppBar>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as api from \"../api/index\";\r\n\r\nexport const userSignin = (user) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.findUser(user);\r\n    dispatch({ type: \"AUTH\", payload: data });\r\n    return true;\r\n  } catch (e) {\r\n    console.log(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const userSignup = (newUser) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.addUser(newUser);\r\n    dispatch({ type: \"AUTH\", payload: data });\r\n    return true;\r\n  } catch (e) {\r\n    console.log(e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchUsers();\r\n    dispatch({ type: \"FETCH_USERS\", payload: data });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Container,\r\n  Grow,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport { userSignup } from \"../Actions/authAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 10,\r\n    padding: theme.spacing(2),\r\n    borderRadius: 15,\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  textField: {\r\n    marginTop: 20,\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 50,\r\n    marginBottom: 10,\r\n    background: \"#79CDCD\",\r\n    fontFamily: \"Copperplate Papyrus\",\r\n  },\r\n  buttonLogin: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 25,\r\n    marginBottom: 10,\r\n    color: \"#000\",\r\n    textDecoration: \"none\",\r\n    fontFamily: \"Copperplate Papyrus\",\r\n  },\r\n  appBar: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  heading: {\r\n    color: \"#C2936E\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst Signup = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [newUser, setNewUser] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confPass: \"\",\r\n  });\r\n  const [clicked, setClicked] = useState(false);\r\n  let [visible, setVisible] = useState(false);\r\n  const updateData = (e) => {\r\n    setNewUser((prevData) => {\r\n      return { ...prevData, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const newUserSignup = async (e) => {\r\n    e.preventDefault();\r\n    setClicked(true);\r\n    if (newUser.password !== newUser.confPass) alert(\"Passwords do not match\");\r\n    else if (newUser.password.length < 8)\r\n      alert(\"Password should be atleast 8 digits long\");\r\n      else {\r\n        let verified = await dispatch(userSignup(newUser));\r\n        if (verified) history.push(\"/chats\");\r\n        else alert(\"Username is taken. Try another\");\r\n      }\r\n    setClicked(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ height: 30 }}>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"inherit\">\r\n          <Typography className={classes.heading} variant=\"h4\" align=\"center\">\r\n            User Login\r\n          </Typography>\r\n        </AppBar>\r\n        </Container>\r\n      <Grow in>\r\n        <Container maxWidth=\"sm\" style={{ marginTop: 50 }}>\r\n          <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={classes.form}>\r\n              <Typography variant=\"h6\">New User</Typography>\r\n              <TextField\r\n                className={classes.textField}\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                value={newUser.name}\r\n                onChange={updateData}\r\n              ></TextField>\r\n              <TextField\r\n                className={classes.textField}\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                value={newUser.username}\r\n                onChange={updateData}\r\n              ></TextField>\r\n              <TextField\r\n                className={classes.textField}\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                label=\"Password\"\r\n                type={visible ? \"text\" : \"password\"}\r\n                fullWidth\r\n                value={newUser.password}\r\n                onChange={updateData}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setVisible((preVisible) => !preVisible);\r\n                        }}\r\n                      >\r\n                        {visible ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              ></TextField>\r\n              <TextField\r\n                className={classes.textField}\r\n                name=\"confPass\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                label=\"Confirm Password\"\r\n                fullWidth\r\n                value={newUser.confPass}\r\n                onChange={updateData}\r\n              ></TextField>\r\n              <Button\r\n                className={classes.buttonSubmit}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                fullWidth\r\n                onClick={newUserSignup}\r\n              >\r\n                Create User\r\n              </Button>\r\n              <Typography\r\n                className={classes.buttonLogin}\r\n                component={Link}\r\n                to=\"/login\"\r\n                variant=\"body1\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n              >\r\n                Already have an account ? Login here\r\n              </Typography>\r\n            </form>\r\n            {clicked ? <LinearProgress /> : <></>}\r\n          </Paper>\r\n        </Container>\r\n      </Grow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Container,\r\n  Grow,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport { userSignin } from \"../Actions/authAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: 10,\r\n    padding: theme.spacing(2),\r\n    borderRadius: 15,\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  textField: {\r\n    marginTop: 20,\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 50,\r\n    background: \"#79CDCD\",\r\n    fontFamily: \"Copperplate Papyrus\",\r\n  },\r\n  buttonGoogle: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 50,\r\n    background: \"light grey\",\r\n    fontFamily: \"Copperplate Papyrus\",\r\n  },\r\n  buttonSignup: {\r\n    fontWeight: \"bold\",\r\n    marginTop: 25,\r\n    marginBottom: 10,\r\n    color: \"#000\",\r\n    fontFamily: \"Copperplate Papyrus\",\r\n    textDecoration: \"none\",\r\n  },\r\n  appBar: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  heading: {\r\n    color: \"#C2936E\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [clicked, setClicked] = useState(false);\r\n  let [visible, setVisible] = useState(false);\r\n  const updateData = (e) => {\r\n    setUser((prevData) => {\r\n      return { ...prevData, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n  const userLogin = async (e) => {\r\n    e.preventDefault();\r\n    setClicked(true);\r\n    console.log(user);\r\n    let verified = await dispatch(userSignin(user));\r\n    if (verified) history.push(\"/chats\");\r\n    else alert(\"Invalid Login Credentials\");\r\n    setClicked(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ height: 30 }}>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"inherit\">\r\n          <Typography className={classes.heading} variant=\"h4\" align=\"center\">\r\n            User Login\r\n          </Typography>\r\n        </AppBar>\r\n        </Container>\r\n      <Grow in>\r\n        <Container maxWidth=\"sm\" style={{ marginTop: 50 }}>\r\n          <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={classes.form}>\r\n              <Typography variant=\"h6\">Enter Login Details</Typography>\r\n              <TextField\r\n                className={classes.textField}\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                value={user.username}\r\n                onChange={updateData}\r\n              ></TextField>\r\n              <TextField\r\n                className={classes.textField}\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                type={visible ? \"text\" : \"password\"}\r\n                label=\"Password\"\r\n                fullWidth\r\n                value={user.password}\r\n                onChange={updateData}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setVisible((preVisible) => !preVisible);\r\n                        }}\r\n                      >\r\n                        {visible ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              ></TextField>\r\n              <Button\r\n                className={classes.buttonSubmit}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                fullWidth\r\n                onClick={userLogin}\r\n              >\r\n                Login\r\n              </Button>\r\n              <Typography\r\n                variant=\"body1\"\r\n                position=\"end\"\r\n                className={classes.buttonSignup}\r\n                component={Link}\r\n                to=\"/register\"\r\n              >\r\n                New User ? Signup here\r\n              </Typography>\r\n            </form>\r\n            {clicked ? <LinearProgress /> : <></>}\r\n          </Paper>\r\n        </Container>\r\n      </Grow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  Container,\r\n  Grow,\r\n  InputBase,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { AccountCircle, SearchOutlined } from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsers } from \"../Actions/authAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { findChat } from \"../api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icons: {\r\n    padding: theme.spacing(0, 2),\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  appBar: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  heading: {\r\n    color: \"#C2936E\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst Searcher = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const currentUser = JSON.parse(localStorage.getItem(\"profile\"));\r\n  if (!currentUser) history.push(\"/\");\r\n  const currentUsername = currentUser.username;\r\n  let [query, setQuery] = useState(\"\");\r\n  let users = [];\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch]);\r\n  users = useSelector((state) => state.auth);\r\n  if (users.length > 0) {\r\n    users = users.filter(\r\n      (user) =>\r\n        user.username &&\r\n        user.name &&\r\n        (user.username.toLowerCase().includes(query.toLowerCase()) ||\r\n          user.name.toLowerCase().includes(query.toLowerCase()))\r\n    );\r\n  }\r\n\r\n  const searchUsers = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ height: 30 }}>\r\n        <AppBar className={classes.appBar} position=\"fixed\" color=\"inherit\">\r\n          <Typography className={classes.heading} variant=\"h4\" align=\"center\">\r\n            Search Users\r\n          </Typography>\r\n        </AppBar>\r\n      </Container>\r\n      <Grow in>\r\n        <AppBar\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 50,\r\n            alignItems: \"center\",\r\n            background: \"black\",\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <Paper style={{ padding: 10, display: \"flex\" }}>\r\n            <div className={classes.icons}>\r\n              <SearchOutlined />\r\n            </div>\r\n            <InputBase\r\n              autoComplete=\"off\"\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n              }}\r\n              name=\"query\"\r\n              value={query}\r\n              onChange={searchUsers}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Paper>\r\n        </AppBar>\r\n      </Grow>\r\n      <Container maxWidth=\"sm\" style={{ marginTop: 135, marginBottom: 65 }}>\r\n        {query ? (\r\n          users.length === 0 ? (\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              No Matches\r\n            </Typography>\r\n          ) : (\r\n            users.map((user) => (\r\n              <Paper\r\n                id={user._id}\r\n                style={{\r\n                  background: \"black\",\r\n                  marginTop: 10,\r\n                  borderRadius: 50,\r\n                  display: \"flex\",\r\n                  padding: 10,\r\n                }}\r\n              >\r\n                <Button\r\n                  style={{ textTransform: \"lowercase\" }}\r\n                  onClick={async () => {\r\n                    console.log(currentUsername, user.username);\r\n                    try {\r\n                      const { data } = await findChat([\r\n                        currentUsername,\r\n                        user.username,\r\n                      ]);\r\n                      history.push(`/chats/${data._id}`);\r\n                    } catch (e) {\r\n                      console.log(e);\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className={classes.icons}>\r\n                    <AccountCircle style={{ color: \"#ffffff\" }} />\r\n                  </div>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    align=\"center\"\r\n                    style={{ color: \"#ffffff\", marginRight: 10 }}\r\n                  >\r\n                    {user.username}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    align=\"center\"\r\n                    style={{ color: \"#ffffff\" }}\r\n                  >\r\n                    ({user.name})\r\n                  </Typography>\r\n                </Button>\r\n              </Paper>\r\n            ))\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Searcher;\r\n","import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./Components/Homepage\";\nimport ChatRoom from \"./Components/ChatRoom\";\nimport Signup from \"./Components/Signup\";\nimport Login from \"./Components/Login\";\nimport Searcher from \"./Components/Searcher\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Homepage} />\n      <Route exact path=\"/chats/\" component={ChatRoom} />\n      <Route exact path=\"/chats/:id\" component={ChatRoom} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/register\" component={Signup} />\n      <Route exact path=\"/search\" component={Searcher} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case \"AUTH\":\r\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.payload }));\r\n      return { ...state, authData: action?.payload };\r\n    case \"FETCH_USERS\":\r\n      return action.payload;\r\n    case \"LOGOUT\":\r\n      localStorage.clear();\r\n      return { ...state, authData: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const chatReducer = (chats = [], action) => {\r\n  switch (action.type) {\r\n    case \"USER_CHATS\":\r\n      return action.payload;\r\n    case \"FIND_CHAT\":\r\n      const index = chats.findIndex((chat) => chat._id === action?.payload._id);\r\n      if (index === -1) return [...chats, action?.payload];\r\n      return chats.splice(index, 1).push(action?.payload);\r\n    case \"MESSAGE\":\r\n      return chats.map((chat) =>\r\n        chat._id === action?.payload._id ? action.payload : chat\r\n      );\r\n    default:\r\n      return chats;\r\n  }\r\n};\r\nexport default chatReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  chats: chatReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers/rootReducer\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}